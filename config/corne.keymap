/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

// LAYERS

#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUNC    3

// MACROS

#define SUPER LC(LSHIFT)
#define SUPER2 LA(LC(LSHIFT))

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm RGUI SEMI>, <&kp SQT>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LCTRL TAB>, <&kp ESC>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_cword {
            timeout-ms = <50>;
            key-positions = <16 19>;
            bindings = <&caps_word>;
        };

        combo_vimwq {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&vim_quit>;
        };
    };

    macros {
        vim_quit: vim_quit {
            label = "ZM_vim_quit";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp ESC &kp COLON &kp W &kp Q>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q       &kp W       &kp E         &kp R          &kp T             &kp Y         &kp U         &kp I           &kp O       &kp P     &none
&none  &hm LGUI A  &hm LALT S  &hm LCTRL D   &hm LSHIFT F   &kp G             &kp H         &hm RSHIFT J  &hm RCTRL K     &hm RALT L  &td0      &none
&none  &kp Z       &kp X       &kp C         &kp V          &kp B             &kp N         &kp M         &kp COMMA       &kp DOT     &kp FSLH  &none
                               &lt 2 ESCAPE  &lt NUM SPACE  &mt LGUI SPACE    &mt RGUI RET  &lt SYM DEL   &mt RALT GRAVE
            >;
        };

        num_layer {
            bindings = <
&none  &kp LEFT_BRACKET  &kp NUMBER_7  &kp N8        &kp N9        &kp RIGHT_BRACKET    &none  &none          &none            &none          &none              &none
&none  &kp SEMICOLON     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_PLUS          &none  &kp RIGHT_GUI  &kp RIGHT_SHIFT  &kp RIGHT_ALT  &kp RIGHT_CONTROL  &none
&none  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH        &none  &none          &none            &none          &none              &none
                                       &kp PERIOD    &kp N0        &kp MINUS            &none  &none          &none
            >;
        };

        sym_layer {
            bindings = <
&none  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none  &none          &none      &none          &none      &none
&none  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp LCTRL              &kp PLUS           &none  &kp RIGHT_GUI  &kp RSHFT  &kp RIGHT_ALT  &kp RCTRL  &none
&none  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &none  &none          &none      &none          &none      &none
                                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &none  &none          &none
            >;
        };

        media_layer {
            bindings = <
&none  &none      &none     &none      &none         &none    &rgb_ug RGB_TOG  &rgb_ug RGB_EFF   &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &none
&none  &kp LCTRL  &kp LALT  &kp LSHFT  &kp LEFT_GUI  &none    &kp C_MUTE       &kp C_REWIND      &kp C_VOL_DN     &kp C_VOLUME_UP  &kp C_FF         &none
&none  &none      &none     &none      &none         &none    &bt BT_CLR       &bt BT_SEL 0      &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &none
                            &none      &none         &none    &kp K_STOP       &kp K_PLAY_PAUSE  &kp K_MUTE
            >;
        };

        nav_layer {
            bindings = <
&trans  &trans     &trans    &trans     &trans    &trans    &kp K_REDO       &kp PAGE_UP    &kp UP_ARROW    &kp PAGE_DOWN  &kp K_COPY   &trans
&trans  &kp LCTRL  &kp LALT  &kp LSHFT  &kp LGUI  &trans    &kp CAPS         &kp LEFT       &kp DOWN_ARROW  &kp RIGHT      &kp K_CUT    &trans
&trans  &trans     &trans    &trans     &trans    &trans    &kp PRINTSCREEN  &kp INS        &kp HOME        &kp END        &kp K_PASTE  &trans
                             &trans     &trans    &trans    &kp ENTER        &kp BACKSPACE  &kp DEL
            >;
        };

        function_layer {
            bindings = <
&none  &kp F12  &kp F7  &kp F8      &kp F9     &kp K_REDO         &none  &none     &none      &none          &none      &none
&none  &kp F11  &kp F4  &kp F5      &kp F6     &kp SCROLLLOCK     &none  &kp RGUI  &kp RSHFT  &kp RIGHT_ALT  &kp RCTRL  &none
&none  &kp F10  &kp F1  &kp F2      &kp F3     &kp PRINTSCREEN    &none  &none     &none      &none          &none      &none
                        &kp ESCAPE  &kp SPACE  &kp TAB            &none  &none     &none
            >;
        };

        mouse_layer {
            bindings = <
&none  &none      &none     &none      &none     &none    &kp K_REDO  &kp K_PASTE     &kp K_COPY      &kp K_CUT     &kp K_UNDO       &none
&none  &kp LCTRL  &kp LALT  &kp LSHFT  &kp LGUI  &none    &none       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none
&none  &none      &none     &none      &none     &none    &none       &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none
                            &none      &none     &none    &mkp RCLK   &mkp LCLK       &mkp MCLK
            >;
        };
    };
};
